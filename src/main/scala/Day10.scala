object Day10 extends App {

  val in1 =
    """
      |.#..#
      |.....
      |#####
      |....#
      |...##
      |""".stripMargin


  type Point = (Int, Int)

  val asteroids: Set[Point] = {
    val lines = in1.split("\n")
    lines.zipWithIndex.flatMap {
      case (s, i) => s.zipWithIndex collect {
        case (c, j) if c == '#' => (i, j)
      }
    }.toSet
  }

  def getVisibleAsteroids(others: Set[Point], point: Point): Int = {
    def shadows: Set[Point] = {
      def getShadow(a: Point): Set[Point] = {
        ???
      }

      others.flatMap(getShadow)
    }
    val visible = others.diff(shadows)

    visible.size
  }

  println(asteroids)

  val result = asteroids.map(a => getVisibleAsteroids(asteroids, a)).max


  val input =
    """
      |.#....#.###.........#..##.###.#.....##...
      |...........##.......#.#...#...#..#....#..
      |...#....##..##.......#..........###..#...
      |....#....####......#..#.#........#.......
      |...............##..#....#...##..#...#..#.
      |..#....#....#..#.....#.#......#..#...#...
      |.....#.#....#.#...##.........#...#.......
      |#...##.#.#...#.......#....#........#.....
      |....##........#....#..........#.......#..
      |..##..........##.....#....#.........#....
      |...#..##......#..#.#.#...#...............
      |..#.##.........#...#.#.....#........#....
      |#.#.#.#......#.#...##...#.........##....#
      |.#....#..#.....#.#......##.##...#.......#
      |..#..##.....#..#.........#...##.....#..#.
      |##.#...#.#.#.#.#.#.........#..#...#.##...
      |.#.....#......##..#.#..#....#....#####...
      |........#...##...#.....#.......#....#.#.#
      |#......#..#..#.#.#....##..#......###.....
      |............#..#.#.#....#.....##..#......
      |...#.#.....#..#.......#..#.#............#
      |.#.#.....#..##.....#..#..............#...
      |.#.#....##.....#......##..#...#......#...
      |.......#..........#.###....#.#...##.#....
      |.....##.#..#.....#.#.#......#...##..#.#..
      |.#....#...#.#.#.......##.#.........#.#...
      |##.........#............#.#......#....#..
      |.#......#.............#.#......#.........
      |.......#...##........#...##......#....#..
      |#..#.....#.#...##.#.#......##...#.#..#...
      |#....##...#.#........#..........##.......
      |..#.#.....#.....###.#..#.........#......#
      |......##.#...#.#..#..#.##..............#.
      |.......##.#..#.#.............#..#.#......
      |...#....##.##..#..#..#.....#...##.#......
      |#....#..#.#....#...###...#.#.......#.....
      |.#..#...#......##.#..#..#........#....#..
      |..#.##.#...#......###.....#.#........##..
      |#.##.###.........#...##.....#..#....#.#..
      |..........#...#..##..#..##....#.........#
      |..#..#....###..........##..#...#...#..#..
      |""".stripMargin



}
